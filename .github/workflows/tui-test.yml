name: TUI Tests

on:
  push:
    branches: [main, dev]
    paths:
      - 'packages/tui-v2/**'
      - '.github/workflows/tui-test.yml'
  pull_request:
    branches: [main, dev]
    paths:
      - 'packages/tui-v2/**'

jobs:
  test:
    name: Test Go ${{ matrix.go-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.21', '1.22', '1.23']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache-dependency-path: packages/tui-v2/go.sum

      - name: Verify dependencies
        working-directory: packages/tui-v2
        run: go mod verify

      - name: Download dependencies
        working-directory: packages/tui-v2
        run: go mod download

      - name: Run tests
        working-directory: packages/tui-v2
        run: make test

      - name: Generate coverage
        working-directory: packages/tui-v2
        run: |
          go test -coverprofile=coverage.out -covermode=atomic ./...
          go tool cover -func=coverage.out

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./packages/tui-v2/coverage.out
          flags: tui-v2
          name: tui-v2-coverage

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache-dependency-path: packages/tui-v2/go.sum

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest
          working-directory: packages/tui-v2

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache-dependency-path: packages/tui-v2/go.sum

      - name: Build binary
        working-directory: packages/tui-v2
        run: make build

      - name: Verify binary (Unix)
        if: runner.os != 'Windows'
        run: test -f packages/rycode/dist/rycode

      - name: Verify binary (Windows)
        if: runner.os == 'Windows'
        run: Test-Path packages/rycode/dist/rycode
        shell: pwsh
